/*                          
        PROJECT TITLE: HANGMAN GAME 
                           
         
 */             

import java.util.Scanner;
public class hangmanGame {
  
    public static void main (String []args){
        Scanner input = new Scanner(System.in);
        String [][] wordslist={{"cyber","team","game","computer"},
                               {"hang","data","hack","python"},
                               {"java","test","program","comsats"}};
        int  totalAttempt=6;
        int tries=0;
        int choice=-1;
        boolean playagain=true;
        String gamestatus ="";
        String playerName;
        String guessword;
        int noOfGamesPlayed = 0;
        
      
        System.out.println("*************************************************************** ");
        System.out.println("                WELCOME TO HANGMAN                              ");
        System.out.println(" ");
        System.out.println("       THE GAME IS GENERATED BY CS DEPARTMENT (BCT 2A)           ");
        System.out.println(" ");
        System.out.println("                 LET'S START THE GAME :)         ");
        System.out.println(" ");
        System.out.println("**************************************************************** ");
        System.out.println(" ");
          
    while(playagain==true){

        totalAttempt=6;
        tries=0;
        guessword=wordslist[getRandomword(wordslist)][getRandomword1(wordslist)];
        char []guessedLetters = new char[guessword.length()]; 
        initializeGuessedLetters(guessedLetters);
        
        System.out.println("");
        System.out.print("Enter your name: ");
        playerName = input.nextLine();

        displayHangman(tries, totalAttempt);
        displayGuessedLetters(guessedLetters);

        while(tries<totalAttempt && !areWordsGUESSED(guessedLetters)){

            System.out.print("Guess a letter: ");
            char userguess = input.nextLine().charAt(0);

            if (isLetterAlreadyGuessed(userguess, guessedLetters)) {
                System.out.println("You already guessed that letter '-' ");
                tries++;
                System.out.println("Attempt Left: " + (totalAttempt - tries));
                continue;
            }
        

            if (!updateGuessedLetter(userguess, guessword, guessedLetters)) {
                tries++;
                System.out.println("Incorrect guess :/ ");
            }

            displayHangman(tries, totalAttempt);
            displayGuessedLetters(guessedLetters);

        }

        if(areWordsGUESSED(guessedLetters)){

            System.out.println("");
            System.out.println(" You guessed the word: " + guessword);
            System.out.println("Congratulations! YOU WON THE GAME ^O^");
            gamestatus="win";
            noOfGamesPlayed++;
            System.out.println("");
            System.out.print("if u want play again enter 0 else enter 1 = ");
            Scanner scanner = new Scanner(System.in);
            choice=scanner.nextInt();

            if(choice==1){

                playagain = false;
                gameRecord(playerName, guessword, gamestatus,noOfGamesPlayed);
                System.out.print("THANK U FOR PLAYING WITH US ^0^ ");
                break;
            }
            else {
                playagain = true;
            }
        }

        if (tries >= totalAttempt) {

            System.out.println("");
            System.out.println("Game over! You ran out of tries. The word was: " + guessword);
            System.out.println("YOU LOST THE GAME :(");
            gamestatus="lost";
            noOfGamesPlayed++;
            System.out.println("");
            System.out.print("if u want play again enter 0 else enter 1 =");
            Scanner scanner = new Scanner(System.in);
            choice=scanner.nextInt();
            
            if(choice==1){

                   playagain = false;               
                   gameRecord(playerName, guessword, gamestatus,noOfGamesPlayed);
                   System.out.println("");
                   System.out.print("THANK U FOR PLAYING WITH US ^0^ ");
                   break;
            }
            else {
                   playagain = true;
            }
        }
           
           gameRecord(playerName, guessword, gamestatus,noOfGamesPlayed);
        
      }
      input.close();
    }
    

    
   //random index 
    public static int getRandomword(String[][] wordlist){
        int index=(int)(Math.random()*wordlist.length);
        return index;
    }
    //random index 
    public static int getRandomword1(String[][] wordlist){
        int index1=(int)(Math.random()*wordlist[0].length);
        return index1;
    }

    // initializing the guessed letter to '_'
    public static void initializeGuessedLetters(char [] guessedLetters) {

        for (int i = 0; i < guessedLetters.length; i++) {

            guessedLetters[i] =  '_';
            //System.out.print(guessedLetters[i]);
            
        }
    }

        //filling the guessed letters
    public static boolean updateGuessedLetter(char userguess,String guessword,char[] guessedLetter ){
        boolean isGuessCorrect=false;
        for (int i =0; i<guessword.length();i++){
    
            if(guessword.charAt(i) == userguess){
    
                guessedLetter[i] = userguess;
                   
                isGuessCorrect = true;
            }
        }
            return isGuessCorrect;
    }
    

    //displaying guessed letter 
    public static void displayGuessedLetters(char[] guessedLetters) {
        for (char letter : guessedLetters) {
            System.out.print(letter + " ");
        }
        System.out.println();
    }

    //displaying the hangman
    public  static void displayHangman(int tries,int totalAttempt) {
            System.out.println(" ");
            System.out.println("Attempt Left: " + (totalAttempt - tries));
    
            if (tries == 1) {
                System.out.println("  +---+");
                System.out.println("  |   |");
                System.out.println("  O   |");
            }
    
            else if (tries == 2) {
                System.out.println("  +---+");
                System.out.println("  |   |");
                System.out.println("  O   |");
                System.out.println("  |   |");
            } 
            else if (tries == 3) {
                System.out.println("  +---+");
                System.out.println("  |   |");
                System.out.println("  O   |");
                System.out.println("  |\\  |");
            } 
             else if (tries == 4) {
                System.out.println("  +---+");
                System.out.println("  |   |");
                System.out.println("  O   |");
                System.out.println(" /|\\  |");
                System.out.println("      |");
            } 
            else if (tries == 5) {
                System.out.println("  +---+");
                System.out.println("  |   |");
                System.out.println("  O   |");
                System.out.println(" /|\\  |");
                System.out.println("   \\  |");
            }
            else if(tries==6){
                System.out.println("  +---+");
                System.out.println("  |   |");
                System.out.println("  O   |");
                System.out.println(" /|\\  |");
                System.out.println(" / \\  |");
                System.out.println("      |");
            }
             
            System.out.println("      |");
            System.out.println("=======");
    }

        //checkin if the letter is already guessed 
        public static boolean isLetterAlreadyGuessed(char userguess,char[] guessword){
            boolean isletteralreadyguessed=false;
            for(char letter:guessword){

                if (letter==userguess){

                isletteralreadyguessed=true;
                 }
            }
            return  isletteralreadyguessed;
    }
        
        
        //win check 
       public static boolean areWordsGUESSED(char[] guessedletter){
        boolean guessed=true;
        for(char letter: guessedletter){

            if(letter=='_'){
            guessed=false;
            }
        } 
        return guessed;
    }


    public static void gameRecord(String playerName, String guessword, String gamestatus,int noOfGamesPlayed) {
        
        String [][] gamedata=new String[1][3];
      
            for (int i = 0; i < 1; i++) {
            
                gamedata[i][0] = playerName;   
                gamedata[i][1] = guessword;              
                gamedata[i][2] = gamestatus;
                
            }

           //FOR DISPLAYING DATA 
           System.out.println(" "); 
           System.out.println("*GAME DATA RECORD*"); 
           System.out.println("Name | GuessWord | GameStatus"); 
          
           for(int i =0;i<1;i++){

            System.out.println(gamedata[i][0] + "     " + gamedata[i][1] + "         " + gamedata[i][2]);
            
        }

        System.out.println("");
        System.out.println("Number of Games Played = "+noOfGamesPlayed); 
        System.out.println("");    
   
    }

    
}
    
 







   
    
    
    

 
